<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2578 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2578.xml">
<!ENTITY RFC3986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3971 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3971.xml">
<!ENTITY RFC3972 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3972.xml">
<!ENTITY RFC4122 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4122.xml">
<!ENTITY RFC5612 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5612.xml">
<!ENTITY RFC6920 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6920.xml">
<!ENTITY RFC7230 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC7252 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC7254 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7254.xml">
<!ENTITY RFC7540 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7540.xml">
<!ENTITY RFC7721 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7721.xml">
<!ENTITY RFC8126 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8126.xml">
<!ENTITY RFC8141 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8141.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8259 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8259.xml">
<!ENTITY RFC8428 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8428.xml">
<!ENTITY RFC8464 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8464.xml">
<!ENTITY I-D.ietf-core-resource-directory SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-core-resource-directory.xml">
]>

<rfc ipr="trust200902"
     docName="draft-ietf-core-dev-urn-09"
     category="info">

<?rfc toc="yes"?> <?rfc symrefs="yes"?> <?rfc autobreaks="yes"?>
<?rfc tocindent="yes"?> <?rfc compact="yes"?> <?rfc subcompact="no"?>

<front>

<title abbrev="DEV URN">Uniform Resource Names for Device Identifiers</title>

<author initials="J" surname="Arkko" fullname="Jari Arkko">
<organization>Ericsson</organization>
<address>
<postal>
<street/>
<city>Jorvas</city> <code>02420</code>
<country>Finland</country>
</postal>
<email>jari.arkko@piuha.net</email>
</address>
</author>

    <author fullname="Cullen Jennings" initials="C." surname="Jennings">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>170 West Tasman Drive</street>

          <city>San Jose</city>

          <region>CA</region>

          <code>95134</code>

          <country>USA</country>
        </postal>

        <phone>+1 408 421-9990</phone>

        <email>fluffy@cisco.com</email>
      </address>
    </author>

        <author initials="Z" surname="Shelby" fullname="Zach Shelby">
          <organization>
             ARM
          </organization>
          <address>
            <postal>
             <street>Kidekuja 2</street>
             <city>Vuokatti</city>
             <code>88600</code>
             <country>FINLAND</country>
            </postal>
            <phone>+358407796297</phone>
            <email>Zach.Shelby@arm.com</email>
          </address>
        </author>

<date month="December" year="2020" />

<keyword>URN</keyword>
<keyword>device identifier</keyword>
<keyword>IMEI</keyword>
<keyword>1-wire</keyword>
<keyword>MAC address</keyword>
<keyword>EUI-48</keyword>
<keyword>EUI-64</keyword>

<abstract>

  <t>This document describes a new Uniform Resource Name (URN) namespace for
  hardware device identifiers. A general representation of device
  identity can be useful in many applications, such as in sensor data
  streams and storage, or equipment inventories. A URN-based
  representation can be easily passed along in any application that
  needs the information.</t>
  
</abstract>

</front>
<middle>

  <section anchor="intro" title="Introduction">
    
    <t>This document describes a new Uniform Resource Name (URN) <xref
    target="RFC8141"/> namespace for hardware
    device identifiers. A general representation of device identity
    can be useful in many applications, such as in sensor data streams
    and storage 
    <xref target="RFC8428"/>, or equipment inventories <xref target="RFC7252"/>,
    <xref target="I-D.ietf-core-resource-directory"/>.</t>

    <t>A URN-based representation
    can be easily passed along in any application that needs the
    information, as it fits in protocols mechanisms that are designed
    to carry URNs <xref target="RFC7230"/>, <xref target="RFC7540"/>, <xref target="RFC3261"/>,
    <xref target="RFC7252"/>. Finally, URNs can also be easily carried
    and stored in formats such as XML <xref
    target="W3C.REC-xml-19980210"/> or JSON <xref target="RFC8259"/> <xref
    target="RFC8428"/>.
    Using URNs in these formats is often preferable
    as they are universally recognized and self-describing, and
    therefore avoid the need for agreeing to interpret an octet
    string as a specific form of a MAC address, for instance.</t>
    
    <t>This document defines identifier URN types for situations where no
    such convenient type already exists. For instance, <xref
    target="RFC6920"/> defines cryptographic identifiers, <xref
    target="RFC7254"/> defines International Mobile station Equipment
    Identity (IMEI) identifiers for use with 3GPP cellular systems,
    and <xref target="RFC8464"/> defines Mobile
    Equipment Identity (MEID) identifiers for use with 3GPP2 cellular
    systems. Those URN types should be employed when such identifiers
    are transported; this document does not redefine these identifiers in
    any way.</t>

    <t>Universally Unique IDentifier (UUID) URNs <xref
    target="RFC4122"/> are another alternative way for representing
    device identifiers, and already support MAC addresses as one of
    type of an identifier. However, UUIDs can be inconvenient in
    environments where it is important that the identifiers are as
    simple as possible and where additional requirements on stable
    storage, real-time clocks, and identifier length can be
    prohibitive. UUID-based identifiers are recommended for all
    general purpose uses when MAC addresses are available as
    identifiers. The device URN defined in this document is recommended
    for constrained environments.</t>

    <t>Future device identifier types can extend the device URN
    type defined here, or define their own URNs.</t>

    <t>Note that long-term stable unique identifiers are problematic
    for privacy reasons and should be used with care or avoided as
    described in <xref target="RFC7721"/>.</t>

    <t>The rest of this document is organized as follows. <xref
    target="devurn"/> defines the "DEV" URN type, and <xref
    target="subtypes"/> defines subtypes for IEEE MAC-48, EUI-48 and
    EUI-64 addresses and 1-wire device identifiers.  <xref
    target="ex"/> gives examples. <xref target="sec"/> discusses the
    security and privacy considerations of the new URN type. Finally, <xref
    target="iana"/> specifies the IANA registration for the new URN
    type and sets requirements for subtype allocations within this
    type.</t>

  </section>

  <section anchor="kwd" title='Requirements language'>
    
    <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
    "OPTIONAL" in this document are to be interpreted as described in BCP
    14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only
    when, they appear in all capitals, as shown here.</t>
    
  </section>
  
  <section anchor="devurn" title="DEV URN Definition">
    
      <t>Namespace Identifier: "dev" requested</t>
      
      <t>Version: 1</t>
      
      <t>Date: 2020-06-24</t>
      
      <t>Registrant: IETF and the CORE working group. Should the working
      group cease to exist, discussion should be directed to the general
      IETF discussion forums or the IESG.</t>
      
      <section title="Purpose">
	
	<t>Purpose: The DEV URNs identify devices with device-specific
	identifiers such as network card hardware addresses. DEV URN
	is global in scope.
	<vspace blankLines="1"/>
	
	Some typical applications include equipment inventories and smart
	object systems.<vspace blankLines="1"/>
	
	DEV URNs can be used in various ways in applications, software
	systems, and network components, in tasks ranging from
	discovery (for instance when discovering 1-wire network
	devices or detecting MAC-addressable devices on a LAN) to
	intrusion detection systems and simple catalogues of system
	information.<vspace blankLines="1"/>
	
	While it is possible to implement resolution systems for specific
	applications or network locations, DEV URNs are typically not used in
	a way that requires resolution beyond direct observation of the
	relevant identifier fields in local link communication. However, it is
	often useful to be able to pass device identifier information in generic
	URN fields in databases or protocol fields, which makes the use of
	URNs for this purpose convenient.<vspace blankLines="1"/>
	
	The DEV URN name space complements existing name spaces such as those
	involving IMEI or UUID identifiers. DEV URNs are expected to be a part
	of the IETF-provided basic URN types, covering identifiers that have
	previously not been possible to use in URNs.</t>
	
      </section>
      
      <section title="Syntax">
	
	<t>Syntax: The identifier is expressed in
	ASCII characters and has a hierarchical structure as
	follows:</t>

    <figure>
      <artwork>
  devurn = "urn:dev:" body componentpart
  body = macbody / owbody / orgbody / osbody / opsbody / otherbody
  macbody = "mac:" hexstring
  owbody = "ow:" hexstring
  orgbody = "org:" number "-" identifier *( ":"  identifier )
  osbody = "os:" number "-" serial *( ":"  identifier )
  opsbody = "ops:" number "-" product "-" serial *( ":"  identifier )
  otherbody = subtype ":" identifier *( ":"  identifier )
  subtype = ALPHA *(DIGIT / ALPHA)
  identifier = 1*devunreserved
  identifiernodash = 1*devunreservednodash
  product = identifiernodash
  serial = identifier
  componentpart = *( "_" identifier )
  devunreservednodash = ALPHA / DIGIT / "."
  devunreserved = devunreservednodash / "-"
  hexstring = 1*(hexdigit hexdigit)
  hexdigit = DIGIT / "a" / "b" / "c" / "d" / "e" / "f"
  number = NZDIGIT *DIGIT
  ALPHA =  %x41-5A / %x61-7A
  NZDIGIT = %x31-39
  DIGIT =  %x30-39
        </artwork>
        </figure>
    
	<t>The above Augmented Backus-Naur Form (ABNF) copies the
	DIGIT and ALPHA rules originally defined in <xref
	target="RFC5234"/>, exactly as defined there.</t>
	
	<t>The device identifier namespace includes five subtypes (see
	<xref target="subtypes"/>, and more may be defined in the future as
	specified in <xref target="iana"/>.</t>
	
	<t>The optional underscore-separated components following the
	hexstring are strings depicting individual aspects of a
	device. The specific strings and their semantics are up to the
	designers of the device, but could be used to refer to
	specific interfaces or functions within the device.</t>
	
        <t>With the exception of the MAC-address and 1-Wire DEV URNs,
        each DEV URN may also contain optional colon-separated
        identifiers. These are provided for extensibility.</t>

	<t>There are no special character encoding rules or
	considerations for conforming with the URN syntax, beyond
	those applicable for URNs in general <xref target="RFC8141"/>,
	or the context where these URNs are carried (e.g., inside JSON
	<xref target="RFC8259"/> or SenML <xref
	target="RFC8428"/>). However, due to the SenML rules, DEV URNs
        do not support percent-encoding.</t>
	
	<t>DEV URNs do not use r-, q-, or f-components.</t>
	
	<t>Specific subtypes of DEV URNs may be validated through
	mechanisms discussed in <xref target="subtypes"/>.</t>
	
	<t>The string representation of the device
	identifier URN is fully compatible with
	the URN syntax.</t>

        <section title="Character Case and URN-Equivalence">
        
	<t>The DEV URN syntax allows both upper and lower case
	characters. The URN-equivalence of the DEV URNs is defined per
	<xref target="RFC8141"/> Section 3.1, i.e,. two URNs are
	URN-equivalent if their assigned-name portions are
	octet-by-octet equal after applying case normalization to the
	URI scheme ("urn") and namespace identifier ("dev").
	The rest of the DEV URN is
	compared in a case sensitive manner. It should be noted that
	URN-equivalence matching merely quickly shows that two URNs
	are definitely the same for the purposes of caching and other
	similar uses. Two DEV URNs may still refer to the same entity,
	and not be found URN-equivalent according to the RFC 8141
	definition. For instance, in ABNF, strings are
	case-insensitive (see <xref target="RFC5234"/> Section 2.3),
	and a MAC address could be represented either with uppercase
	or lowercase hexadecimal digits.</t>

        <t>Character case is not otherwise significant for the DEV URN
        subtypes defined in this document.  However, future subtypes
        might include identifiers that use encodings such as BASE64,
        which encode strings in a larger variety of characters, and
        might even encode binary data.</t>
        
        <t>To facilitate equivalence checks, it is RECOMMENDED that
	implementations always use lower case letters where they have
	a choice in case, unless there is a reason otherwise. (Such a
	reason might be, for instance, the use of a subtype that
	requires the use of both upper case and lower case
	letters.)</t>
        
        </section>
        
      </section>
      
      <section title="Assignment">
	
	<t>Assignment: The process for identifier
	assignment is dependent on the used subtype, and documented in the
	specific subsection under <xref target="subtypes"/>.</t>
	
	<t>Device identifiers are generally expected to identify a
        unique device,
	barring the accidental issue of multiple devices with the same
	identifiers. In many cases, device identifiers can also be
	changed by users, or sometimes assigned in an algorithmic
	fashion. Any potential conflicts arising from such
	assignments are not something that the DEV URNs as such
	manage; they simply are there to refer to a particular
	identifier. And of course, a single device may (and often
        does) have multiple identifiers, e.g,. identifiers associated
        with different link technologies it supports.</t>

	<t>The DEV URN type SHOULD only be used for persistent identifiers,
	such as hardware-based identifiers.</t>
	
      </section>
      
      <section title="Security and Privacy">
	
	<t>Security and Privacy: As discussed in <xref target="sec"/>,
	care must be taken in the use of device-identifier-based
	identifiers due to their nature as long-term identifiers that
	are not normally changeable.  Leakage of these identifiers
	outside systems where their use is justified should be
	controlled.</t>
	
      </section>
      
      <section title="Interoperability">
	
	<t>Interoperability: There are no specific interoperability
	concerns.</t>
	
      </section>
      
      <section title="Resolution">
	
	<t>Resolution: The device identifiers are not expected to be globally
	resolvable. No identifier resolution system is expected. Systems may
	perform local matching of identifiers to previously seen identifiers
	or configured information, however.</t>
	
      </section>
      
      <section title="Documentation">
	
	<t>See RFC NNNN (RFC Editor: Please replace NNNN by a reference to
	the RFC number of this document).</t>
	
      </section>
      
      <section title="Additional Information">
	
	<t>See <xref target="intro"/> for a discussion of related name spaces.</t>
	
      </section>
      
      <section title="Revision Information">
	
	<t>Revision Information: This is the first version of this registration.</t>
	
      </section>
      
    </section>
    
<section anchor="subtypes" title="DEV URN Subtypes">

  <section anchor="mac" title="MAC Addresses">

<t>DEV URNs of the "mac" subtype are based on the EUI-64 identifier
<xref target="IEEE.EUI64"/> derived from a device with a built-in
64-bit EUI-64. The EUI-64 is formed from 24 or 36 bits of organization
identifier followed by 40 or 28 bits of device-specific extension
identifier assigned by that organization.</t>

<t>In the DEV URN "mac" subtype the hexstring is simply the full
EUI-64 identifier represented as a hexadecimal string. It is always
exactly 16 characters long.</t>

<t>MAC-48 and EUI-48 identifiers are also supported by the same DEV
URN subtype.  To convert a MAC-48 address to an EUI-64 identifier, The
OUI of the Ethernet address (the first three octets) becomes the
organization identifier of the EUI-64 (the first three octets).  The
fourth and fifth octets of the EUI are set to the fixed value FFFF
hexadecimal.  The last three octets of the Ethernet address become the
last three octets of the EUI-64. The same process is used to convert
an EUI-48 identifier, but the fixed value FFFE is used instead.</t>

<t>Identifier assignment for all of these identifiers rests within the
IEEE.</t>

</section>

<section anchor="s1wire" title="1-Wire Device Identifiers">

<t>The 1-Wire* system is a device communications bus system designed
by Dallas Semiconductor Corporation. 1-Wire devices are identified by
a 64-bit identifier that consists of 8 byte family code, 48 bit
identifier unique within a family, and 8 bit CRC code <xref
target="OW"/>.

<list style="empty">
<t>*) 1-Wire is a registered trademark.</t>
</list>
</t>

<t>In DEV URNs with the "ow" subtype the hexstring is a representation
of the full 64 bit identifier as a hexadecimal string. It is always
exactly 16 characters long. Note that the last two characters
represent the 8-bit CRC code. Implementations MAY check the validity
of this code.</t>

<t>Family code and identifier assignment for all 1-wire devices rests
with the manufacturers.</t>

</section>

<section anchor="org" title="Organization-Defined Identifiers">
  <t>Device identifiers that have only a meaning within an
  organisation can also be used to represent vendor-specific or
  experimental identifiers or identifiers designed for use within the
  context of an organisation.</t>

  <t>Organisations are identified by their Private Enterprise Number
  (PEN) <xref target="RFC2578"/>. These numbers can be obtained from
  IANA. Current PEN assignments can be viewed at
  https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers
  and new assignments requested at
  https://pen.iana.org/pen/PenApplication.page.</t>

  <t>Note that when included in an "org" DEV URN, the number can not have
  leading zeroes, as the ABNF requires the number to start with a
  non-zero digit.</t>
  
</section>

<section anchor="os" title="Organization Serial Numbers">

  <t>The "os" subtype specifies an organization and a serial
  number. Organizations are identified by their PEN. As with the
  organization-defined identifiers (<xref target="org"/>), PEN number
  assignments are maintained by IANA, and assignments for new
  organizations can be made easily.

  <list style="empty">

    <t>Editor's Note (Please remove before publication): The DEV URN
    "os" subtype has originally been defined in the LwM2M standard,
    but has been incorporated here to collect all syntax associated
    with DEV URNs in one place. At the same time, the syntax of this
    subtype was changed to avoid the possibility of characters that
    are not allowed in SenML Name field (see <xref target="RFC8428"/>
    Section 4.5.1).</t>

  <t>Organizations are also encouraged to select serial number formats
  that avoid possibility for ambiguity, in the form of leading zeroes
  or otherwise.</t>
  
  </list></t>

  <t>Organization serial number DEV URNs consist of the PEN number and
  the serial number. As with other DEV URNs, for carrying additional
  information and extensibility, optional colon-separated identifiers
  and underscore-separated components may also be included. The serial
  numbers themselves are defined by the organization, and this
  specification does not specify how they are allocated.</t>

</section>

<section anchor="ops" title="Organization Product and Serial Numbers">
  
  <t>The DEV URN "ops" subtype has originally been defined in the
  LwM2M standard, but has been incorporated here to collect all syntax
  associated with DEV URNs in one place. The "ops" subtype specifies
  an organization, product class, and a serial number. Organizations
  are identified by their PEN. Again, as with the
  organization-defined identifiers (<xref target="org"/>), PEN number
  assignments are maintained by IANA.

  <list style="empty">

    <t>Editor's Note (Please remove before publication): As with the
    "os" subtype, the "ops" subtype has originally been defined in the
    LwM2M standard, and its format has been slightly changed.</t>

  </list></t>
  
  <t>Organization product and serial number DEV URNs consist of the
  PEN number, product class, and the serial number. As with other DEV
  URNs, for carrying additional information and extensibility,
  optional colon-separated identifiers and underscore-separated
  components may also be included. Both the product class and serial
  numbers themselves are defined by the organization, and this
  specification does not specify how thy are allocated.</t>

  <t>Organizations are also encouraged to select product and serial
  number formats that avoid possibility for ambiguity.</t>
  
</section>

</section>

<section anchor="ex" title="Examples">

<t>The following provides some examples of DEV URNs:

<figure>
<artwork>
    urn:dev:mac:0024beffff804ff1            # The MAC-48 address of
                                            # 0024be804ff1, converted
                                            # to EUI-64 format

    urn:dev:mac:0024befffe804ff1            # The EUI-48 address of
                                            # 0024be804ff1, converted
                                            # to EUI-64 format

    urn:dev:mac:acde48234567019f            # The EUI-64 address of
                                            # acde48234567019f

    urn:dev:ow:10e2073a01080063             # The 1-Wire temperature
                                            # sensor in Jari's
                                            # kitchen

    urn:dev:ow:264437f5000000ed_humidity    # The laundry sensor's
                                            # humidity part

    urn:dev:ow:264437f5000000ed_temperature # The laundry sensor's
                                            # temperature part

    urn:dev:org:32473-foo                   # An organization-
                                            # specific URN in
                                            # the RFC 5612 example
                                            # organisation, 32473.

    urn:dev:os:32473-123456                 # Device 123456 in
                                            # the RFC 5612 example
                                            # organisation

    urn:dev:os:32473-12-34-56               # A serial number with
                                            # dashes in it

    urn:dev:ops:32473-Refrigerator-5002     # Refrigerator serial
                                            # number 5002 in the
                                            # RFC 5612 example
                                            # organisation

    urn:dev:newsubtype:example-1-2-3_comp   # A yet-to-be-defined
                                            # subtype
</artwork>
</figure>
</t>

</section>

<section anchor="sec" title="Security Considerations">

<t>On most devices, the user can display device identifiers. Depending
on circumstances, device identifiers may or may not be modified or
tampered with by the user. An implementation of the DEV URN MUST NOT change
these properties from what they were intended. In particular, a device
identifier that is intended to be immutable should not become mutable
as a part of implementing the DEV URN type. More generally, nothing in
this document should be construed to override what the relevant device
specifications have already said about the identifiers.</t>

<section anchor="priv" title="Privacy">

<t>Other devices in the same network may or may not be able to
identify the device. For instance, on an Ethernet network, the MAC
address of a device is visible to all other devices.</t>

<t>The URNs generated according to the rules defined in this document
result in long-term stable unique identifiers for the devices. Such
identifiers may have privacy and security implications because they
may enable correlating information about a specific device over a long
period of time, location tracking, and device specific vulnerability
exploitation <xref target="RFC7721"/>. Also, usually there is no easy
way to change the identifier. Therefore these identifiers need to be
used with care and especially care should be taken to avoid leaking them
outside of the system that is intended to use the identifiers.</t>

</section>

</section>

<section anchor="iana" title="IANA Considerations">

  <t>This document requests the registration of a new URN namespace
  for "DEV", as described in <xref target="devurn"/>.</t>

  <t>IANA is asked to create a "DEV URN Subtypes" registry. The initial values
  in this registry are as follows:

  <figure>
  <artwork>
Subtype  Description                              Reference
------------------------------------------------------------------------
mac      MAC Addresses                            (THIS RFC) Section 4.1
ow       1-Wire Device Identifiers                (THIS RFC) Section 4.2
org      Organization-Defined Identifiers         (THIS RFC) Section 4.3
os       Organization Serial Numbers              (THIS RFC) Section 4.4
ops      Organization Product and Serial Numbers  (THIS RFC) Section 4.5
  </artwork>
  </figure></t>

  <t>Additional subtypes for DEV URNs can be defined through
  Specification Required or IESG Approval <xref
  target="RFC8126"/>. These allocations are appropriate when there is
  a new namespace of some type of device identifiers, defined in
  stable fashion and with a publicly available specification that can
  be pointed to.</t>

  <t>Note that the organisation (<xref target="org"/>) device
  identifiers can also be used in some cases, at least as a temporary
  measure. It is preferable, however, that long-term usage of a
  broadly employed device identifier be registered with IETF rather
  than used through the organisation device identifier type.</t>

</section>

</middle>

<back>

<references title="Normative References">
  
  &RFC2119;
  &RFC2578;
  &RFC3986;
  &RFC5234;
  &RFC8126; 
  &RFC8141; 
  &RFC8174; 
  
  <reference
      anchor="IEEE.EUI64"
      target="https://standards.ieee.org/content/dam/ieee-standards/standards/web/documents/tutorials/eui.pdf">
    <front>
      <title>Guidelines For 64-bit Global Identifier (EUI-64)</title>
      <author>
	<organization>IEEE</organization>
      </author>
      <date year='unknown year' />
    </front>
    <seriesInfo name="IEEE" value=" " />
  </reference>
  
  <reference
      anchor="OW"
      target="http://www.maxim-ic.com/app-notes/index.mvp/id/1796">
    <front>
      <title>Overview of 1-Wire(R) Technology and Its Use</title>
      <author>
	<organization>IEEE</organization>
      </author>
      <date month='June' year='2008' />
    </front>
    <seriesInfo name="MAXIM" value=" http://www.maxim-ic.com/app-notes/index.mvp/id/1796" />
  </reference>
  
</references>

<references title="Informative References">

  &RFC3261; 
  &RFC4122;
  &RFC7230; 
  &RFC7540; 
  &RFC7721; 
  &RFC8259;
  
  <reference anchor='W3C.REC-xml-19980210'
	     target='http://www.w3.org/TR/1998/REC-xml-19980210'>
    <front>
      <title>XML 1.0 Recommendation</title>
      
      <author initials='C.' surname='Sperberg-McQueen' fullname='C. M. Sperberg-McQueen'>
	<organization />
      </author>
      
      <author initials='T.' surname='Bray' fullname='Tim Bray'>
	<organization />
      </author>
      
      <author initials='J.' surname='Paoli' fullname='Jean Paoli'>
	<organization />
      </author>
      
      <date month='February' day='10' year='1998' />
    </front>
    
    <seriesInfo name='World Wide Web Consortium FirstEdition' value='REC-xml-19980210' />
    <format type='HTML' target='http://www.w3.org/TR/1998/REC-xml-19980210' />
  </reference>

  <reference anchor='OUI'
	     target='http://standards.ieee.org/develop/regauth/oui/'>
    <front>
      <title>Registration Authority</title>
      
      <author initials="SA" surname="IEEE" fullname='IEEE-SA'>
	<organization />
      </author>
      
      <date year='2018' />
    </front>
    
    <seriesInfo name='IEEE-SA' value='webpage'/>
    <format type='HTML' target='http://standards.ieee.org/develop/regauth/oui/' />
  </reference>

  &RFC7252;
  &RFC8428;
  &RFC6920;
  &RFC7254;
  &RFC8464;
  &I-D.ietf-core-resource-directory;
  
</references>

<section title="Changes from Previous Version">

  <t>Version -08 of the WG draft took into account IANA, SECDIR,
  Gen-ART, and OPSDIR reviews. The following changes were made:
  <list style="symbols">
    <t>Aligned the use of identifiers vs. identity terms.</t>
    <t>Renamed the "unreserved" ABNF terminal to avoid confusion with
    the general URN ABN terminal with the same name.</t>
    <t>Removed the mistakenly included text about MEID subtype.</t>
    <t>Clarified URN syntax differences and normalization rules wrt
    the lack of percent-encoding in DEV URNs.</t>
    <t>Required PEN numbers to start with non-zero digit in the ABNF
    and changed the associated language later in the draft.</t>
    <t>Text about case-insensitivity in RFC 5234 was clarified.</t>
    <t>Text about uniqueness was clarified.</t>
    <t>Editorial changes.</t>
  </list>
  </t>
  
  <t>Version -08 of the WG draft took into account Barry Leiba's AD 
  review comments. To address these comments, changes were made in
  <list style="symbols">
    <t>Further updates of the upper/lower case rules for the DEV URNs.</t>
    <t>Further updates to the ABNF.</t>
    <t>The use of HEXDIG from RFC 5234.</t>
    <t>IANA considerations for the creation of separate registry for the own parameters of DEV URNs.</t>
    <t>Editorial improvements.</t>
  </list></t>

  <t>Version -07 of the WG draft took into account Carsten Bormann's
  feedback, primarily on character case issues and editorials.</t>
  
  <t>Version -06 of the WG draft took into account Marco Tiloca's
  feedback before a second WGLC, primarily on further cleanup of
  references and editorial issues.</t>
  
  <t>Version -05 of the WG draft made some updates based on WGLC 
  input: examples for MAC-48 and EUI-48, clarification with regards to
  leading zeroes, new recommendation with the use of lower-case
  letters to avoid comparison problems, small update of the RFC 8141
  template usage, reference updates, and editorial corrections.</t>
  
  <t>Version -04 of the WG draft cleaned up the ABNF:

  <list style="symbols">

  <t>Parts of the ANBF now allow for use cases for the component part that were not previously
  covered: the syntax now allows the character "." to appear, and
  serial numbers can have dashes in them.</t>

  <t>The syntax was also
  extended to allow for extensibility by adding additional ":"
  separated parts for the org, op, ops, and other subtypes.</t>

  <t>The ABNF
  was changed to include directly the ALPHA and DIGIT parts imported
  from RFC 5234, instead of just having a verbal comment about
  it. (Note that the style in existing RFCs differs on this.)</t>

  </list></t>

  <t>In addition, in -04 the MAC example was corrected to use the
  inserted value ffff instead of fffe, required by <xref
  target="mac"/>, the org example was corrected, the os: examples and
  otherbody examples were added. The IANA rules for allocating new
  subtypes was slightly relaxed in order to cover for new subtype
  cases that are brought up regularly, and often not from inside the
  IETF. Finally, the allocation of PEN numbers and the use of product
  classes and serial numbers was better explained.</t>
  
  <t>Version -03 of the WG draft removed some unnecessary references,
  updated some other references, removed pct-encoding to ensure the
  DEV URNs fit <xref target="RFC8428"/> Section 4.5.1 rules, and
  clarified that the original source of the "os" and "ops"
  subtypes.</t>
  
  <t>Version -02 of the WG draft folded in the "ops" and "os" branches
  of the dev:urn syntax from LwM2M, as they seemed to match well what
  already existed in this document under the "org" branch. However, as a
  part of this three changes were incorporated:
  
  <list style="symbols">
    
    <t>The syntax for the "org:" changes to use "-" rather than ":"
    between the OUI and the rest of the URN.</t>

    <t>The organizations for the "ops" and "os" branches have been
    changed to use PEN numbers rather than OUI numbers <xref
    target="OUI"/>.  The reason for this is that PEN numbers are
    allocated through a simpler and less costly process. However, this
    is a significant change to how LwM2M identifiers were specified
    before.</t>
    
    <t>There were also changes to what general characters can be used
    in the otherbody branch of the ABNF.</t>

  </list></t>
  
  <t>The rationale for all these changes is that it would be helpful
  for the community collect and unify syntax between the different
  uses of DEV URNs. If there is significant use of either the org:,
  os:, or ops: subtypes, then changes at this point may not be
  warranted, but otherwise unified syntax, as well as the use of PEN
  numbers would probably be beneficial. Comments on this topic are
  appreciated.</t>
  
  <t>Version -01 of the WG draft converted the draft to use the new
  URN registration template from <xref target="RFC8141"/>.</t>
  
  <t>Version -00 of the WG draft renamed the file name and fixed the
  ABNF to correctly use "org:" rather than "dn:".</t>
  
  <t>Version -05 made a change to the delimiter for parameters within
  a DEV URN. Given discussions on allowed character sets in SenML
  <xref target="RFC8428"/>, we would like to suggest that
  the "_" character be used instead of ";", to avoid the need to
  translate DEV URNs in SenML-formatted communications or
  files. However, this reverses the earlier decision to not use
  unreserved characters.  This also means that device IDs cannot use
  "_" characters, and have to employ other characters
  instead. Feedback on this decision is sought.</t>

  <t>Version -05 also introduced local or organisation-specific device
  identifiers. Organisations are identified by their PEN number
  (although we considered FQDNs as a potential alternative. The
  authors belive an organisation-specific device identifier type will
  make experiments and local use easier, but feedback on this point
  and the choice of PEN numbers vs. other possible organisation
  identifiers would be very welcome.</t>

  <t>Version -05 also added some discussion of privacy concerns around
  long-term stable identifiers.</t>

  <t>Finally, version -05 clarified the situations when new
  allocations within the registry of possible device identifier
  subtypes is appropriate.</t>

  <t>Version -04 is a refresh, as the need and interest for this
  specification has re-emerged. And the editing author has emerged
  back to actual engineering from the depths of IETF
  administration.</t>

  <t>Version -02 introduced several changes. The biggest change is
  that with the NI URNs <xref target="RFC6920"/>, it was no longer
  necessary to define cryptographic identifiers in this
  specification. Another change was that we incorporated a more
  generic syntax for future extensions; non-hexstring identifiers can
  now also be supported, if some future device identifiers for some
  reason would, for instance, use BASE64. As a part of this change, we
  also changed the component part separator character from '-' to ';'
  so that the general format of the rest of the URN can employ the
  unreserved characters <xref target="RFC3986"/>.</t>

  <t>Version -03 made several minor corrections to the ABNF as well as
  some editorial corrections.</t>
  
</section>

<section title="Acknowledgments">

  <t>The authors would like to thank Ari Keranen, Stephen Farrell,
  Christer Holmberg, Peter Saint-Andre, Wouter Cloetens, Jaime
  Jimenez, Joseph Knapp, Padmakumar Subramani, Mert Ocak, Hannes
  Tschofenig, Jim Schaad, Thomas Fossati, Carsten Bormann, Marco
  Tiloca, Barry Leiba, Amanda Baber, Juha Hakala, Dale Worley, and
  Ahmad Muhanna for feedback and interesting discussions in this
  problem space. We would also like to note prior documents that
  focused on specific device identifiers, such as <xref
  target="RFC7254"/> or <xref target="RFC8464"/>.</t>

</section>

</back>
</rfc>
